name: "Darkent2Caffe"
input: "data"
input_dim: 1
input_dim: 3
input_dim: 320
input_dim: 320

layer {
    bottom: "data"
    top: "layer1-conv"
    name: "layer1-conv"
    type: "Convolution"
    convolution_param {
        num_output: 16
        kernel_size: 3
        group: 1
        pad: 1
        stride: 2
        bias_term: false
    }
}
layer {
    bottom: "layer1-conv"
    top: "layer1-conv"
    name: "layer1-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer1-conv"
    top: "layer1-conv"
    name: "layer1-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer1-conv"
    top: "layer1-conv"
    name: "layer1-act"
    type: "ReLU"
}
layer {
    bottom: "layer1-conv"
    top: "layer2-conv"
    name: "layer2-conv"
    type: "Convolution"
    convolution_param {
        num_output: 16
        kernel_size: 3
        group: 16
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer2-conv"
    top: "layer2-conv"
    name: "layer2-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer2-conv"
    top: "layer2-conv"
    name: "layer2-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer2-conv"
    top: "layer2-conv"
    name: "layer2-act"
    type: "ReLU"
}
layer {
    bottom: "layer2-conv"
    top: "layer3-conv"
    name: "layer3-conv"
    type: "Convolution"
    convolution_param {
        num_output: 8
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer3-conv"
    top: "layer3-conv"
    name: "layer3-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer3-conv"
    top: "layer3-conv"
    name: "layer3-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer3-conv"
    top: "layer4-conv"
    name: "layer4-conv"
    type: "Convolution"
    convolution_param {
        num_output: 48
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer4-conv"
    top: "layer4-conv"
    name: "layer4-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer4-conv"
    top: "layer4-conv"
    name: "layer4-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer4-conv"
    top: "layer4-conv"
    name: "layer4-act"
    type: "ReLU"
}
layer {
    bottom: "layer4-conv"
    top: "layer5-conv"
    name: "layer5-conv"
    type: "Convolution"
    convolution_param {
        num_output: 48
        kernel_size: 3
        group: 48
        pad: 1
        stride: 2
        bias_term: false
    }
}
layer {
    bottom: "layer5-conv"
    top: "layer5-conv"
    name: "layer5-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer5-conv"
    top: "layer5-conv"
    name: "layer5-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer5-conv"
    top: "layer5-conv"
    name: "layer5-act"
    type: "ReLU"
}
layer {
    bottom: "layer5-conv"
    top: "layer6-conv"
    name: "layer6-conv"
    type: "Convolution"
    convolution_param {
        num_output: 12
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer6-conv"
    top: "layer6-conv"
    name: "layer6-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer6-conv"
    top: "layer6-conv"
    name: "layer6-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer6-conv"
    top: "layer7-conv"
    name: "layer7-conv"
    type: "Convolution"
    convolution_param {
        num_output: 72
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer7-conv"
    top: "layer7-conv"
    name: "layer7-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer7-conv"
    top: "layer7-conv"
    name: "layer7-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer7-conv"
    top: "layer7-conv"
    name: "layer7-act"
    type: "ReLU"
}
layer {
    bottom: "layer7-conv"
    top: "layer8-conv"
    name: "layer8-conv"
    type: "Convolution"
    convolution_param {
        num_output: 72
        kernel_size: 3
        group: 72
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer8-conv"
    top: "layer8-conv"
    name: "layer8-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer8-conv"
    top: "layer8-conv"
    name: "layer8-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer8-conv"
    top: "layer8-conv"
    name: "layer8-act"
    type: "ReLU"
}
layer {
    bottom: "layer8-conv"
    top: "layer9-conv"
    name: "layer9-conv"
    type: "Convolution"
    convolution_param {
        num_output: 12
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer9-conv"
    top: "layer9-conv"
    name: "layer9-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer9-conv"
    top: "layer9-conv"
    name: "layer9-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer6-conv"
    bottom: "layer9-conv"
    top: "layer10-shortcut"
    name: "layer10-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer10-shortcut"
    top: "layer11-conv"
    name: "layer11-conv"
    type: "Convolution"
    convolution_param {
        num_output: 72
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer11-conv"
    top: "layer11-conv"
    name: "layer11-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer11-conv"
    top: "layer11-conv"
    name: "layer11-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer11-conv"
    top: "layer11-conv"
    name: "layer11-act"
    type: "ReLU"
}
layer {
    bottom: "layer11-conv"
    top: "layer12-conv"
    name: "layer12-conv"
    type: "Convolution"
    convolution_param {
        num_output: 72
        kernel_size: 3
        group: 72
        pad: 1
        stride: 2
        bias_term: false
    }
}
layer {
    bottom: "layer12-conv"
    top: "layer12-conv"
    name: "layer12-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer12-conv"
    top: "layer12-conv"
    name: "layer12-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer12-conv"
    top: "layer12-conv"
    name: "layer12-act"
    type: "ReLU"
}
layer {
    bottom: "layer12-conv"
    top: "layer13-conv"
    name: "layer13-conv"
    type: "Convolution"
    convolution_param {
        num_output: 16
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer13-conv"
    top: "layer13-conv"
    name: "layer13-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer13-conv"
    top: "layer13-conv"
    name: "layer13-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer13-conv"
    top: "layer14-conv"
    name: "layer14-conv"
    type: "Convolution"
    convolution_param {
        num_output: 96
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer14-conv"
    top: "layer14-conv"
    name: "layer14-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer14-conv"
    top: "layer14-conv"
    name: "layer14-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer14-conv"
    top: "layer14-conv"
    name: "layer14-act"
    type: "ReLU"
}
layer {
    bottom: "layer14-conv"
    top: "layer15-conv"
    name: "layer15-conv"
    type: "Convolution"
    convolution_param {
        num_output: 96
        kernel_size: 3
        group: 96
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer15-conv"
    top: "layer15-conv"
    name: "layer15-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer15-conv"
    top: "layer15-conv"
    name: "layer15-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer15-conv"
    top: "layer15-conv"
    name: "layer15-act"
    type: "ReLU"
}
layer {
    bottom: "layer15-conv"
    top: "layer16-conv"
    name: "layer16-conv"
    type: "Convolution"
    convolution_param {
        num_output: 16
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer16-conv"
    top: "layer16-conv"
    name: "layer16-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer16-conv"
    top: "layer16-conv"
    name: "layer16-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer13-conv"
    bottom: "layer16-conv"
    top: "layer17-shortcut"
    name: "layer17-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer17-shortcut"
    top: "layer18-conv"
    name: "layer18-conv"
    type: "Convolution"
    convolution_param {
        num_output: 96
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer18-conv"
    top: "layer18-conv"
    name: "layer18-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer18-conv"
    top: "layer18-conv"
    name: "layer18-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer18-conv"
    top: "layer18-conv"
    name: "layer18-act"
    type: "ReLU"
}
layer {
    bottom: "layer18-conv"
    top: "layer19-conv"
    name: "layer19-conv"
    type: "Convolution"
    convolution_param {
        num_output: 96
        kernel_size: 3
        group: 96
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer19-conv"
    top: "layer19-conv"
    name: "layer19-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer19-conv"
    top: "layer19-conv"
    name: "layer19-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer19-conv"
    top: "layer19-conv"
    name: "layer19-act"
    type: "ReLU"
}
layer {
    bottom: "layer19-conv"
    top: "layer20-conv"
    name: "layer20-conv"
    type: "Convolution"
    convolution_param {
        num_output: 16
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer20-conv"
    top: "layer20-conv"
    name: "layer20-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer20-conv"
    top: "layer20-conv"
    name: "layer20-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer17-shortcut"
    bottom: "layer20-conv"
    top: "layer21-shortcut"
    name: "layer21-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer21-shortcut"
    top: "layer22-conv"
    name: "layer22-conv"
    type: "Convolution"
    convolution_param {
        num_output: 96
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer22-conv"
    top: "layer22-conv"
    name: "layer22-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer22-conv"
    top: "layer22-conv"
    name: "layer22-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer22-conv"
    top: "layer22-conv"
    name: "layer22-act"
    type: "ReLU"
}
layer {
    bottom: "layer22-conv"
    top: "layer23-conv"
    name: "layer23-conv"
    type: "Convolution"
    convolution_param {
        num_output: 96
        kernel_size: 3
        group: 96
        pad: 1
        stride: 2
        bias_term: false
    }
}
layer {
    bottom: "layer23-conv"
    top: "layer23-conv"
    name: "layer23-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer23-conv"
    top: "layer23-conv"
    name: "layer23-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer23-conv"
    top: "layer23-conv"
    name: "layer23-act"
    type: "ReLU"
}
layer {
    bottom: "layer23-conv"
    top: "layer24-conv"
    name: "layer24-conv"
    type: "Convolution"
    convolution_param {
        num_output: 32
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer24-conv"
    top: "layer24-conv"
    name: "layer24-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer24-conv"
    top: "layer24-conv"
    name: "layer24-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer24-conv"
    top: "layer25-conv"
    name: "layer25-conv"
    type: "Convolution"
    convolution_param {
        num_output: 192
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer25-conv"
    top: "layer25-conv"
    name: "layer25-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer25-conv"
    top: "layer25-conv"
    name: "layer25-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer25-conv"
    top: "layer25-conv"
    name: "layer25-act"
    type: "ReLU"
}
layer {
    bottom: "layer25-conv"
    top: "layer26-conv"
    name: "layer26-conv"
    type: "Convolution"
    convolution_param {
        num_output: 192
        kernel_size: 3
        group: 192
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer26-conv"
    top: "layer26-conv"
    name: "layer26-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer26-conv"
    top: "layer26-conv"
    name: "layer26-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer26-conv"
    top: "layer26-conv"
    name: "layer26-act"
    type: "ReLU"
}
layer {
    bottom: "layer26-conv"
    top: "layer27-conv"
    name: "layer27-conv"
    type: "Convolution"
    convolution_param {
        num_output: 32
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer27-conv"
    top: "layer27-conv"
    name: "layer27-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer27-conv"
    top: "layer27-conv"
    name: "layer27-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer24-conv"
    bottom: "layer27-conv"
    top: "layer28-shortcut"
    name: "layer28-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer28-shortcut"
    top: "layer29-conv"
    name: "layer29-conv"
    type: "Convolution"
    convolution_param {
        num_output: 192
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer29-conv"
    top: "layer29-conv"
    name: "layer29-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer29-conv"
    top: "layer29-conv"
    name: "layer29-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer29-conv"
    top: "layer29-conv"
    name: "layer29-act"
    type: "ReLU"
}
layer {
    bottom: "layer29-conv"
    top: "layer30-conv"
    name: "layer30-conv"
    type: "Convolution"
    convolution_param {
        num_output: 192
        kernel_size: 3
        group: 192
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer30-conv"
    top: "layer30-conv"
    name: "layer30-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer30-conv"
    top: "layer30-conv"
    name: "layer30-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer30-conv"
    top: "layer30-conv"
    name: "layer30-act"
    type: "ReLU"
}
layer {
    bottom: "layer30-conv"
    top: "layer31-conv"
    name: "layer31-conv"
    type: "Convolution"
    convolution_param {
        num_output: 32
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer31-conv"
    top: "layer31-conv"
    name: "layer31-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer31-conv"
    top: "layer31-conv"
    name: "layer31-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer28-shortcut"
    bottom: "layer31-conv"
    top: "layer32-shortcut"
    name: "layer32-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer32-shortcut"
    top: "layer33-conv"
    name: "layer33-conv"
    type: "Convolution"
    convolution_param {
        num_output: 192
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer33-conv"
    top: "layer33-conv"
    name: "layer33-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer33-conv"
    top: "layer33-conv"
    name: "layer33-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer33-conv"
    top: "layer33-conv"
    name: "layer33-act"
    type: "ReLU"
}
layer {
    bottom: "layer33-conv"
    top: "layer34-conv"
    name: "layer34-conv"
    type: "Convolution"
    convolution_param {
        num_output: 192
        kernel_size: 3
        group: 192
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer34-conv"
    top: "layer34-conv"
    name: "layer34-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer34-conv"
    top: "layer34-conv"
    name: "layer34-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer34-conv"
    top: "layer34-conv"
    name: "layer34-act"
    type: "ReLU"
}
layer {
    bottom: "layer34-conv"
    top: "layer35-conv"
    name: "layer35-conv"
    type: "Convolution"
    convolution_param {
        num_output: 32
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer35-conv"
    top: "layer35-conv"
    name: "layer35-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer35-conv"
    top: "layer35-conv"
    name: "layer35-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer32-shortcut"
    bottom: "layer35-conv"
    top: "layer36-shortcut"
    name: "layer36-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer36-shortcut"
    top: "layer37-conv"
    name: "layer37-conv"
    type: "Convolution"
    convolution_param {
        num_output: 192
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer37-conv"
    top: "layer37-conv"
    name: "layer37-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer37-conv"
    top: "layer37-conv"
    name: "layer37-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer37-conv"
    top: "layer37-conv"
    name: "layer37-act"
    type: "ReLU"
}
layer {
    bottom: "layer37-conv"
    top: "layer38-conv"
    name: "layer38-conv"
    type: "Convolution"
    convolution_param {
        num_output: 192
        kernel_size: 3
        group: 192
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer38-conv"
    top: "layer38-conv"
    name: "layer38-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer38-conv"
    top: "layer38-conv"
    name: "layer38-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer38-conv"
    top: "layer38-conv"
    name: "layer38-act"
    type: "ReLU"
}
layer {
    bottom: "layer38-conv"
    top: "layer39-conv"
    name: "layer39-conv"
    type: "Convolution"
    convolution_param {
        num_output: 48
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer39-conv"
    top: "layer39-conv"
    name: "layer39-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer39-conv"
    top: "layer39-conv"
    name: "layer39-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer39-conv"
    top: "layer40-conv"
    name: "layer40-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer40-conv"
    top: "layer40-conv"
    name: "layer40-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer40-conv"
    top: "layer40-conv"
    name: "layer40-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer40-conv"
    top: "layer40-conv"
    name: "layer40-act"
    type: "ReLU"
}
layer {
    bottom: "layer40-conv"
    top: "layer41-conv"
    name: "layer41-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 3
        group: 288
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer41-conv"
    top: "layer41-conv"
    name: "layer41-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer41-conv"
    top: "layer41-conv"
    name: "layer41-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer41-conv"
    top: "layer41-conv"
    name: "layer41-act"
    type: "ReLU"
}
layer {
    bottom: "layer41-conv"
    top: "layer42-conv"
    name: "layer42-conv"
    type: "Convolution"
    convolution_param {
        num_output: 48
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer42-conv"
    top: "layer42-conv"
    name: "layer42-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer42-conv"
    top: "layer42-conv"
    name: "layer42-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer39-conv"
    bottom: "layer42-conv"
    top: "layer43-shortcut"
    name: "layer43-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer43-shortcut"
    top: "layer44-conv"
    name: "layer44-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer44-conv"
    top: "layer44-conv"
    name: "layer44-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer44-conv"
    top: "layer44-conv"
    name: "layer44-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer44-conv"
    top: "layer44-conv"
    name: "layer44-act"
    type: "ReLU"
}
layer {
    bottom: "layer44-conv"
    top: "layer45-conv"
    name: "layer45-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 3
        group: 288
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer45-conv"
    top: "layer45-conv"
    name: "layer45-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer45-conv"
    top: "layer45-conv"
    name: "layer45-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer45-conv"
    top: "layer45-conv"
    name: "layer45-act"
    type: "ReLU"
}
layer {
    bottom: "layer45-conv"
    top: "layer46-conv"
    name: "layer46-conv"
    type: "Convolution"
    convolution_param {
        num_output: 48
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer46-conv"
    top: "layer46-conv"
    name: "layer46-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer46-conv"
    top: "layer46-conv"
    name: "layer46-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer43-shortcut"
    bottom: "layer46-conv"
    top: "layer47-shortcut"
    name: "layer47-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer47-shortcut"
    top: "layer48-conv"
    name: "layer48-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer48-conv"
    top: "layer48-conv"
    name: "layer48-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer48-conv"
    top: "layer48-conv"
    name: "layer48-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer48-conv"
    top: "layer48-conv"
    name: "layer48-act"
    type: "ReLU"
}
layer {
    bottom: "layer48-conv"
    top: "layer49-conv"
    name: "layer49-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 3
        group: 288
        pad: 1
        stride: 2
        bias_term: false
    }
}
layer {
    bottom: "layer49-conv"
    top: "layer49-conv"
    name: "layer49-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer49-conv"
    top: "layer49-conv"
    name: "layer49-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer49-conv"
    top: "layer49-conv"
    name: "layer49-act"
    type: "ReLU"
}
layer {
    bottom: "layer49-conv"
    top: "layer50-conv"
    name: "layer50-conv"
    type: "Convolution"
    convolution_param {
        num_output: 80
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer50-conv"
    top: "layer50-conv"
    name: "layer50-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer50-conv"
    top: "layer50-conv"
    name: "layer50-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer50-conv"
    top: "layer51-conv"
    name: "layer51-conv"
    type: "Convolution"
    convolution_param {
        num_output: 480
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer51-conv"
    top: "layer51-conv"
    name: "layer51-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer51-conv"
    top: "layer51-conv"
    name: "layer51-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer51-conv"
    top: "layer51-conv"
    name: "layer51-act"
    type: "ReLU"
}
layer {
    bottom: "layer51-conv"
    top: "layer52-conv"
    name: "layer52-conv"
    type: "Convolution"
    convolution_param {
        num_output: 480
        kernel_size: 3
        group: 480
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer52-conv"
    top: "layer52-conv"
    name: "layer52-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer52-conv"
    top: "layer52-conv"
    name: "layer52-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer52-conv"
    top: "layer52-conv"
    name: "layer52-act"
    type: "ReLU"
}
layer {
    bottom: "layer52-conv"
    top: "layer53-conv"
    name: "layer53-conv"
    type: "Convolution"
    convolution_param {
        num_output: 80
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer53-conv"
    top: "layer53-conv"
    name: "layer53-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer53-conv"
    top: "layer53-conv"
    name: "layer53-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer50-conv"
    bottom: "layer53-conv"
    top: "layer54-shortcut"
    name: "layer54-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer54-shortcut"
    top: "layer55-conv"
    name: "layer55-conv"
    type: "Convolution"
    convolution_param {
        num_output: 480
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer55-conv"
    top: "layer55-conv"
    name: "layer55-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer55-conv"
    top: "layer55-conv"
    name: "layer55-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer55-conv"
    top: "layer55-conv"
    name: "layer55-act"
    type: "ReLU"
}
layer {
    bottom: "layer55-conv"
    top: "layer56-conv"
    name: "layer56-conv"
    type: "Convolution"
    convolution_param {
        num_output: 480
        kernel_size: 3
        group: 480
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer56-conv"
    top: "layer56-conv"
    name: "layer56-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer56-conv"
    top: "layer56-conv"
    name: "layer56-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer56-conv"
    top: "layer56-conv"
    name: "layer56-act"
    type: "ReLU"
}
layer {
    bottom: "layer56-conv"
    top: "layer57-conv"
    name: "layer57-conv"
    type: "Convolution"
    convolution_param {
        num_output: 80
        kernel_size: 1
        group: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer57-conv"
    top: "layer57-conv"
    name: "layer57-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer57-conv"
    top: "layer57-conv"
    name: "layer57-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer54-shortcut"
    bottom: "layer57-conv"
    top: "layer58-shortcut"
    name: "layer58-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer58-shortcut"
    top: "layer59-maxpool"
    name: "layer59-maxpool"
    type: "Pooling"
    pooling_param {
        kernel_size: 3
        stride: 1
        pool: MAX
        pad: 1
    }
}
layer {
    bottom: "layer58-shortcut"
    top: "layer60-route"
    name: "layer60-route"
    type: "Concat"
}
layer {
    bottom: "layer60-route"
    top: "layer61-maxpool"
    name: "layer61-maxpool"
    type: "Pooling"
    pooling_param {
        kernel_size: 5
        stride: 1
        pool: MAX
        pad: 2
    }
}
layer {
    bottom: "layer58-shortcut"
    top: "layer62-route"
    name: "layer62-route"
    type: "Concat"
}
layer {
    bottom: "layer62-route"
    top: "layer63-maxpool"
    name: "layer63-maxpool"
    type: "Pooling"
    pooling_param {
        kernel_size: 9
        stride: 1
        pool: MAX
        pad: 4
    }
}
layer {
    bottom: "layer63-maxpool"
    bottom: "layer61-maxpool"
    bottom: "layer59-maxpool"
    bottom: "layer58-shortcut"
    top: "layer64-route"
    name: "layer64-route"
    type: "Concat"
}
layer {
    bottom: "layer64-route"
    top: "layer65-conv"
    name: "layer65-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer65-conv"
    top: "layer65-conv"
    name: "layer65-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer65-conv"
    top: "layer65-conv"
    name: "layer65-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer65-conv"
    top: "layer65-conv"
    name: "layer65-act"
    type: "ReLU"
}
layer {
    bottom: "layer65-conv"
    top: "layer66-conv"
    name: "layer66-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 3
        group: 288
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer66-conv"
    top: "layer66-conv"
    name: "layer66-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer66-conv"
    top: "layer66-conv"
    name: "layer66-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer66-conv"
    top: "layer66-conv"
    name: "layer66-act"
    type: "ReLU"
}
layer {
    bottom: "layer66-conv"
    top: "layer67-conv"
    name: "layer67-conv"
    type: "Convolution"
    convolution_param {
        num_output: 96
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer67-conv"
    top: "layer67-conv"
    name: "layer67-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer67-conv"
    top: "layer67-conv"
    name: "layer67-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer67-conv"
    top: "layer67-conv"
    name: "layer67-act"
    type: "ReLU"
}
layer {
    bottom: "layer67-conv"
    top: "layer68-conv"
    name: "layer68-conv"
    type: "Convolution"
    convolution_param {
        num_output: 384
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer68-conv"
    top: "layer68-conv"
    name: "layer68-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer68-conv"
    top: "layer68-conv"
    name: "layer68-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer68-conv"
    top: "layer68-conv"
    name: "layer68-act"
    type: "ReLU"
}
layer {
    bottom: "layer68-conv"
    top: "layer69-conv"
    name: "layer69-conv"
    type: "Convolution"
    convolution_param {
        num_output: 75
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: true
    }
}
layer {
    bottom: "layer65-conv"
    top: "layer71-route"
    name: "layer71-route"
    type: "Concat"
}
layer {
    bottom: "layer71-route"
    top: "layer72-upsample"
    name: "layer72-upsample"
    type: "Upsample"
    upsample_param {
        scale: 2
    }
}
layer {
    bottom: "layer72-upsample"
    bottom: "layer48-conv"
    top: "layer73-route"
    name: "layer73-route"
    type: "Concat"
}
layer {
    bottom: "layer73-route"
    top: "layer74-conv"
    name: "layer74-conv"
    type: "Convolution"
    convolution_param {
        num_output: 80
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer74-conv"
    top: "layer74-conv"
    name: "layer74-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer74-conv"
    top: "layer74-conv"
    name: "layer74-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer74-conv"
    top: "layer74-conv"
    name: "layer74-act"
    type: "ReLU"
}
layer {
    bottom: "layer74-conv"
    top: "layer75-conv"
    name: "layer75-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer75-conv"
    top: "layer75-conv"
    name: "layer75-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer75-conv"
    top: "layer75-conv"
    name: "layer75-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer75-conv"
    top: "layer75-conv"
    name: "layer75-act"
    type: "ReLU"
}
layer {
    bottom: "layer75-conv"
    top: "layer76-conv"
    name: "layer76-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 3
        group: 288
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer76-conv"
    top: "layer76-conv"
    name: "layer76-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer76-conv"
    top: "layer76-conv"
    name: "layer76-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer76-conv"
    top: "layer76-conv"
    name: "layer76-act"
    type: "ReLU"
}
layer {
    bottom: "layer76-conv"
    top: "layer77-conv"
    name: "layer77-conv"
    type: "Convolution"
    convolution_param {
        num_output: 192
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer77-conv"
    top: "layer77-conv"
    name: "layer77-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer77-conv"
    top: "layer77-conv"
    name: "layer77-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer77-conv"
    top: "layer77-conv"
    name: "layer77-act"
    type: "ReLU"
}
layer {
    bottom: "layer77-conv"
    top: "layer78-conv"
    name: "layer78-conv"
    type: "Convolution"
    convolution_param {
        num_output: 288
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer78-conv"
    top: "layer78-conv"
    name: "layer78-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer78-conv"
    top: "layer78-conv"
    name: "layer78-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer78-conv"
    top: "layer78-conv"
    name: "layer78-act"
    type: "ReLU"
}
layer {
    bottom: "layer78-conv"
    top: "layer79-conv"
    name: "layer79-conv"
    type: "Convolution"
    convolution_param {
        num_output: 75
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: true
    }
}
